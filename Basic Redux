import { createStore ,combineReducers,applyMiddleware} from 'redux';

const initialState = {
    salary: 15000,
    value: []
}

const Userreducer = (state = { name: "nap", age: 22 }, action) => {
    switch (action.type) {
        case "setName":
            state={
                ...state,
                name:action.payload
            }
            break;
        case "setAge":
            state={
                ...state,
                age:action.payload
            }
            break;
        default:
    }
    return state;
}
const Employeereducer = (state = initialState, action) => {
    switch (action.type) {
        case "ADD":
            // state = {
            // state :  อากิวเม้นฟังก์ชัน.ระบุ state
            // salary:state.salary
            // value:state.value
            // }
            state = {
                ...state,
                salary: state.salary += action.payload,
                value: [...state.value, action.payload]
            }
            break;
        case "SUBTACT":
            state = {
                ...state,
                salary: state.salary -= action.payload,
                value: [...state.value, action.payload]
            }
            break;
        default:

    }
    return state;
}
//middleware      store  next-> action get actionStore
const Debugger = (store) => (next)=> (action)=>{
    console.log("action",action);
    next(action);
}
                                                                            /*Middleware Apply(function)*/
const store = createStore(combineReducers({Employeereducer,Userreducer}),{},applyMiddleware(Debugger));
store.subscribe(() => {
    console.log("update", store.getState());
})
store.dispatch({
    type: "ADD",
    payload: 15000
})
store.dispatch({
    type:"setName",
    payload:'max'
})
store.dispatch({
    type:"setAge",
    payload:50
})
